openapi: 3.0.0
info:
  version: 1.0.0
  title: TAPS Toolkit
  description: This is a TAPS Toolkit contract implementation
paths:
  /devices:
    get:
      summary: List all devices
      operationId: listDevices
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
  /devices/{deviceUid}:
    get:
      summary: Get a device by UID
      operationId: getDevice
      security:
        - bearerAuth: []
      parameters:
        - name: deviceUid
          in: path
          required: true
          description: The UID of the device to retrieve
          schema:
            type: string
      responses:
        "200":
          description: The device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
  /identities:
    get:
      summary: List all identities
      operationId: listIdentities
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Identity"
  /identities/{uid}:
    get:
      summary: Get an identity by UID
      operationId: getIdentity
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          description: The UID of the identity to retrieve
          schema:
            type: string
      responses:
        "200":
          description: The identity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
  /identities/{uid}/calculate-elo:
    get:
      summary: Calculate the ELO of an identity
      operationId: calculateElo
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          description: The UID of the identity to calculate the ELO for
          schema:
            type: string
      responses:
        "200":
          description: The ELO of the identity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elo"
  /identities/start-import-session:
    post:
      summary: Start an identity import session
      operationId: startImportSession
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentityStartImportSessionRequest"
      responses:
        "200":
          description: The import session response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentityStartImportSessionResponse"
  /identities/complete-import-session:
    post:
      summary: Complete an identity import session
      operationId: completeImportSession
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentityCompleteImportSessionRequest"
      responses:
        "200":
          description: The import session response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentityCompleteImportSessionResponse"
  /jobs:
    get:
      summary: List all jobs
      operationId: listJobs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
    /jobs/{id}:
      get:
        summary: Get a job by ID
        operationId: getJob
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            required: true
            description: The ID of the job to retrieve
            schema:
              type: string
        responses:
          "200":
            description: The job
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Job"
    /jobs/create:
      post:
        summary: Create a job
        operationId: createJob
        security:
          - bearerAuth: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        responses:
          "200":
            description: The job
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Job"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Identity:
      type: object
      required:
        - id
        - uid
        - deviceUid
        - isBanned
        - isDeleted
        - usdBalance
        - gemsBalance
      properties:
        id:
          type: string
        uid:
          type: string
        deviceUid:
          type: string
        isBanned:
          type: boolean
        isDeleted:
          type: boolean
        usdBalance:
          type: integer
          format: int64
        gemsBalance:
          type: integer
          format: int64
    Elo:
      required:
        - elo
      properties:
        elo:
          type: number
          format: double
    IdentityStartImportSessionRequest:
      type: object
      required:
        - phone
        - deviceId
      properties:
        phone:
          type: string
        deviceId:
          type: string
    IdentityStartImportSessionResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string
    IdentityCompleteImportSessionRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
    IdentityCompleteImportSessionResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string
    Device:
      type: object
      required:
        - id
        - uid
        - longitude
        - latitude
        - deviceId
        - deviceToken
      properties:
        id:
          type: string
        uid:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        deviceId:
          type: string
        deviceToken:
          type: strin
    Job:
      type: object
      required:
        - id
        - friendlyName
        - description
        - subject
        - created
        - didComplete
        - isArchived
        - gameScoreEntityList
      properties:
        id:
          type: string
        friendlyName:
          type: string
        description:
          type: string
        subject:
          type: string
        created:
          type: string
          format: date-time
        didComplete:
          type: boolean
        isArchived:
          type: boolean
        gameScoreEntityList:
          type: array
          items:
            type: string
        identityId:
          type: string
        gameConfigId:
          type: string
    JobCreateRequest:
      type: object
      required:
        - friendlyName
        - description
        - targetFinalScore
        - gameConfigId
        - identityId
      properties:
        friendlyName:
          type: string
        description:
          type: string
        targetFinalScore:
          type: integer
          format: int64
        gameConfigId:
          type: string
        identityId:
          type: string